// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  name           String?
  email          String   @unique
  hashedPassword String?
  role           String   @default("USER")

  tokens   Token[]
  sessions Session[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Token {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  hashedToken String
  type        String
  // See note below about TokenType enum
  // type        TokenType
  expiresAt   DateTime
  sentTo      String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([hashedToken, type])
}

// NOTE: It's highly recommended to use an enum for the token type
//       but enums only work in Postgres.
//       See: https://blitzjs.com/docs/database-overview#switch-to-postgre-sql
// enum TokenType {
//   RESET_PASSWORD
// }

model Day {
  id                   Int     @id
  actualDate           String
  year                 Int
  unix                 BigInt
  daySuffix            String  @db.VarChar(4)
  dayName              String  @db.VarChar(9)
  dayOfWeek            Int
  dayOfMonth           Int
  dayOfYear            Int
  weekOfYear           Int
  monthOfYear          Int
  monthName            String  @db.VarChar(9)
  monthNameAbbreviated String  @db.Char(3)
  mmyyyy               String  @db.Char(6)
  mmddyyyy             String  @db.Char(8)
  isWeekend            Boolean
  Audit                Audit[]
}

model Template {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  dummyField String
}

model Location {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  address1  String
  address2  String?
  city      String
  county    String?
  postCode  String
  poc       String?
  contact   String?
  Audit     Audit[]
}

model Audit {
  id               Int               @id @default(autoincrement())
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  comment          String?
  location         Location          @relation(fields: [locationId], references: [id])
  locationId       Int
  date             Day               @relation(fields: [dateId], references: [id])
  dateId           Int
  auditType        AuditType         @relation(fields: [auditTypeId], references: [id])
  auditTypeId      Int
  auditAssessments AuditAssessment[]
}

model AuditAssessment {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  assessment  Int
  comment     String?
  audit       Audit        @relation(fields: [auditId], references: [id])
  auditId     Int
  section     AuditSection @relation(fields: [sectionId], references: [id])
  sectionId   Int
  action      AuditAction  @relation(fields: [actionId], references: [id])
  actionId    Int
  auditType   AuditType    @relation(fields: [auditTypeId], references: [id])
  auditTypeId Int
}

model AuditType {
  id               Int               @id @default(autoincrement())
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  name             String
  description      String
  position         Int
  auditSection     AuditSection[]
  audits           Audit[]
  auditAssessments AuditAssessment[]
}

model AuditSection {
  id               Int               @id @default(autoincrement())
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  name             String
  number           Int
  auditType        AuditType         @relation(fields: [auditTypeId], references: [id])
  auditTypeId      Int
  auditActions     AuditAction[]
  auditAssessments AuditAssessment[]
}

model AuditAction {
  id               Int               @id @default(autoincrement())
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  name             String
  auditSection     AuditSection      @relation(fields: [auditSectionId], references: [id])
  auditSectionId   Int
  position         Int
  auditAssessments AuditAssessment[]
}
